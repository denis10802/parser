<?php

namespace Tests\Feature;

use App\Components\FeedContentParser;
use App\Components\FeedReadComponent;
use App\Components\NoticeModelUpdate;
use App\Components\NoticeRefreshComponent;
use App\Components\ParseNoticeDTO;
use App\Http\Controllers\RefreshNoticesCommand;
use App\Jobs\Logging;
use App\Jobs\MailSend;
use App\Listeners\SendingToMail;
use App\Mail\NotifyAboutNotices;
use Illuminate\Support\Facades\Bus;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Queue;
use Tests\TestCase;

class JobsTest extends TestCase
{
    private object $notices;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $arrayToEntry = [
            [
                "title" => "Радий Хабиров параолимпийцам",
                "link" => "https://www.bashinform.ru/news/1645589-vsekh/"
            ],
            [
                "title" => "ВТБ и ДОМ.РФ запускают первую",
                "link" => "https://www.bashinform.ru/news/1645581-ipoteku/"
            ]
        ];

        foreach ($arrayToEntry as $notice){
            $this->notices = new ParseNoticeDTO($notice['title'],$notice['link']);
        }
    }

    public function test_job_logging()
    {
        $this->markTestSkipped('TODO: fix test');
        Queue::fake();

        $order = new Logging();
        $order->handle();
    }

    public function test_mail_send()
    {
        //arrange
        Mail::fake();
        $title[] = $this->notices->title;
        //act
        $order = new MailSend($title);
        $order->handle();
        //assert
        Mail::assertSent(NotifyAboutNotices::class);
        Mail::assertSent(function (NotifyAboutNotices $mail) use ($title) {
            return $mail->build()->viewData['titles'] === $title;
        });
    }
}
